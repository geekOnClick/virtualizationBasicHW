services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    env_file:
      - .env
    ports:
      - ${OUTER_NGINX_PORT}:${INNER_NGINX_PORT}
    networks:
      - nginx_net

  redis:
    image: "redis:latest"
    container_name: redis
    env_file:
      - .env
    ports:
      - ${OUTER_REDIS_PORT}:${INNER_REDIS_PORT}
    depends_on:
      - nginx
    networks:
      - redis_net
  
  backend:
    build:
      context: .
      dockerfile: ./python/Dockerfile
    container_name: backend
    env_file:
      - .env
    ports:
      - ${OUTER_PORT_BACKEND}:${INNER_PORT_BACKEND}
    command: sh -c "uvicorn app:app --reload --host ${HOST_BACKED} --port ${INNER_PORT_BACKEND}"
    networks:
      - db_net
      - redis_net
      - nginx_net
    depends_on:
      - redis

  mongo:
    image: mongo:latest
    container_name: mongo
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongo_vol:/data/db
    networks:
      - db_net
    depends_on:
      - backend

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    env_file:
      - .env
    ports:
      - ${OUTER_MONGO_EXPRESS_PORT}:${INNER_MONGO_EXPRESS_PORT}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:${MONGO_PORT}/
      ME_CONFIG_BASICAUTH: false
    networks:
      - db_net
    depends_on:
      - mongo

networks:
  db_net:
    driver: bridge
  redis_net:
    driver: bridge
  nginx_net:
    driver: bridge

volumes:
  mongo_vol: